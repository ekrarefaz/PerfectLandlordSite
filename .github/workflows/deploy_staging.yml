name: Build and Deploy to Staging Website

on:
  workflow_dispatch
# otherwise auto on update of main
#  push:
#    branches: [ "main" ]

env:
  REPOSITORY: perfect-landlord # TODO: update to Artifact Registry docker repository
  IMAGE: perfect-landlord
  
jobs:
     
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Docker configuration
      uses: docker/login-action@v2
      with:
        username: colonel13
        password: dckr_pat_dhqpA6eqNlNAmGTqyxtfR-Cplqg
   
    - name: Build React Website
      run: |
        cd frontend
        npm install
        npm run build
        ls -l
        cd ..
        
    - name: Build Django Static files
      run: |
        cd backend
        pip install -r requirements.txt 
        python3 manage.py collectstatic
        cd ..

    - name: Collect website and django static into nginx container build
      run: |
        cp frontend/dist/* nginx/html/.
        cp backend/
          
#     # Build the Docker image
#     - name: Build
#       run: |-
#         docker build \
#           --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
#           .
#     # Push the Docker image to Google Artifact Registry
#     - name: Publish
#       run: |-
#         docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
#     # Set up kustomize
#     - name: Set up Kustomize
#       run: |-
#         curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
#         chmod u+x ./kustomize
#     # Deploy the Docker image to the GKE cluster
#     - name: Deploy
#       run: |-
#         # replacing the image name in the k8s template
#         ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
#         ./kustomize build . | kubectl apply -f -
#         kubectl rollout status deployment/$DEPLOYMENT_NAME
#         kubectl get services -o wide
